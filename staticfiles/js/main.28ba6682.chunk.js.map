{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","reducers/userReducer.js","constants/orderConstants.js","actions/cartActions.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/routeReducer.js","axiosInstance.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","actions/routeAction.js","actions/productActions.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","components/AddressComponent.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/AboutUsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_RESET","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_OTP_FAIL","USER_OTP_REQUEST","USER_OTP_SUCCESS","GET_USER_ADDRESSES_REQUEST","GET_USER_ADDRESSES_SUCCESS","GET_USER_ADDRESSES_FAIL","parseAddress","addresses","JSON","parse","map","el","fields","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","addToCart","id","variantId","qty","dispatch","getState","a","axios","get","data","index","variants","findIndex","type","payload","productId","_id","name","variantDescription","description","image","price","countInStock","localStorage","setItem","stringify","cart","cartItems","reducer","combineReducers","productList","state","products","action","loading","page","pages","error","productDetails","product","reviews","productReviewCreate","success","shippingAddress","item","existItem","find","x","pId","vId","filter","paymentMethod","userLogin","userInfo","userRegister","OTPready","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","keyword","savedAddresses","cartItemsFromStorage","getItem","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","axiosInstance","create","baseURL","process","headers","interceptors","request","use","req","access","token","jwt_decode","dayjs","unix","exp","diff","config","post","refresh","Authorization","logout","removeItem","SearchBox","useState","setKeyword","navigate","useNavigate","location","useLocation","Col","md","Form","onSubmit","e","preventDefault","pathname","className","Control","size","onChange","target","value","Button","variant","Header","useSelector","useDispatch","Navbar","bg","collapseOnSelect","expand","Container","to","Brand","Toggle","Collapse","Nav","NavDropdown","title","Item","onClick","Link","Footer","Row","href","Rating","text","color","style","Product","Card","Img","src","Body","Title","as","catchPhrase","Text","rating","numReviews","numVariants","Math","min","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","isAdmin","split","Pagination","Array","keys","active","HomeScreen","search","useEffect","updateKeyword","response","detail","message","listProducts","ProductScreen","showModal","setShowModal","handleClose","fill","showModalVariants","setShowModalVariants","handleCloseVariants","setQty","setRating","comment","setComment","checkedState","setCheckedState","checkedBoxIndex","setCheckedBoxIndex","loadingProductReview","errorProductReview","successProductReview","useParams","includes","addToCartHandler","Image","alt","fluid","Modal","show","onHide","ListGroup","xs","Select","disabled","Table","hover","position","updatedCheckedState","handleOnChange","updatedArray","handleShowVariants","thumbnail","relatedProductLink","length","review","createdAt","substring","createProductReview","Group","controlId","Label","rows","CartScreen","parseInt","useSearchParams","searchParams","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","username","setUsername","password","setPassword","needOTP","setNeedOTP","OTP","setOTP","redirect","loginWithOTP","required","placeholder","login","RegisterScreen","userName","setUserName","email","setEmail","confirmPassword","setConfirmPassword","setMessage","sendOTP","Object","values","register","ProfileScreen","showResetPassword","setShowResetPassword","oldPassword","setOldPassword","password2","setPassword2","errorUpdatePassword","loadingOrders","errorOrders","put","updateUserProfile","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","AddressBox","input","highlighted","selectedAddress","address","apartment","city","postalCode","phone","ShippingScreen","whichHighlighted","setWhichHighlighted","addNewAddress","setAddNewAddress","setName","setAddress","setApartment","setCity","setState","setPostalCode","setPhone","selected","submitHandler","newAddressHandler","oldAddresses","unshift","newAddressForm","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","instructions","setInstructions","itemsPrice","shippingPrice","taxPrice","disable","undefined","createOrder","OrderScreen","orderId","errorPayPal","setErrorPayPal","sdkReady","setSdkReady","loadingPay","successPay","errorPay","console","log","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","trackingNumber","shippingService","actions","purchase_units","amount","currency_code","custom_id","shipping","full_name","address_line_1","address_line_2","admin_area_2","admin_area_1","postal_code","country_code","application_context","locale","shipping_preference","onSuccess","paymentResult","payOrder","onError","err","AboutUsScreen","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28ba6682.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_OTP_FAIL = 'USER_OTP_FAIL'\nexport const USER_OTP_REQUEST = 'USER_OTP_REQUEST'\nexport const USER_OTP_SUCCESS = 'USER_OTP_SUCCESS'\n\nexport const GET_USER_ADDRESSES_REQUEST = 'GET_USER_ADDRESSES_REQUEST '\nexport const GET_USER_ADDRESSES_SUCCESS = 'GET_USER_ADDRESSES_SUCCESS'\nexport const GET_USER_ADDRESSES_FAIL = 'GET_USER_ADDRESSES_FAIL'\n\n","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_OTP_FAIL,\n    USER_OTP_REQUEST,\n    USER_OTP_SUCCESS,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    GET_USER_ADDRESSES_REQUEST,\n    GET_USER_ADDRESSES_SUCCESS,\n    GET_USER_ADDRESSES_FAIL\n\n } from '../constants/userConstants'\n\n export const userLoginReducer = (state = { }, action) => {\n    switch(action.type) { \n        case USER_LOGIN_REQUEST:\n            return {loading:true}\n\n        case USER_LOGIN_SUCCESS:\n            return {loading:false, userInfo: action.payload}\n\n        case USER_LOGIN_FAIL:\n            return {loading:false, error: action.payload}\n            \n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = { }, action) => {\n    switch(action.type){ \n        case USER_REGISTER_REQUEST:\n            return {loading:true}\n        case USER_OTP_REQUEST:\n            return {loading:true, OTPready: true}\n\n        case USER_REGISTER_SUCCESS:\n            return {loading:false, OTPready: true}\n\n        case USER_REGISTER_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_OTP_FAIL:\n            return {loading:false, error: action.payload, OTPready: true}\n        \n        case USER_OTP_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch(action.type){ \n        case USER_DETAILS_REQUEST:\n            return {...state, loading:true}\n\n        case USER_DETAILS_SUCCESS:\n            return {loading:false, user: action.payload}\n\n        case USER_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n        \n        case USER_DETAILS_RESET:\n            return { user: {}}\n    \n            \n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch(action.type){ \n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading:true}\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading:false, success: true, userInfo: action.payload}\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nconst parseAddress = addresses => {\n    return (\n        JSON.parse(addresses).map(el=>el.fields)\n    )\n}\n\nexport const getSavedAddressesReducer = (state = [], action) => {\n    switch(action.type) {\n        case GET_USER_ADDRESSES_REQUEST:\n            return {loading: true}\n        case GET_USER_ADDRESSES_SUCCESS:\n            return {loading: false, success: true, addresses: parseAddress(action.payload)}\n        case GET_USER_ADDRESSES_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'","import axios from 'axios'\nimport { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants'\n\n\n\n\n\nexport const addToCart = (id, variantId, qty) => async (dispatch, getState) => {\n\n    const {data} = await axios.get(`/api/products/${id}`);\n    \n \n    // Find index of correct variant within product.variants list\n\n    let index = data.variants.findIndex( el => el['_id'] === variantId)\n    \n\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            productId: data._id,\n            variantId,\n            name: data.name,\n            variantDescription: data.variants[index].description,\n            image: data.variants[index].image,\n            price: data.variants[index].price,\n            countInStock: data.variants[index].countInStock,\n            qty\n        }            \n    }) \n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (productId, variantId) => async (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: {\n            productId,\n            variantId\n        } \n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data, \n    })\n\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data, \n    })\n\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'  \nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, getSavedAddressesReducer } from './reducers/userReducer'\nimport { \n    orderCreateReducer, \n    orderDetailsReducer, \n    orderPayReducer, \n    orderListyMyReducer, \n} from './reducers/orderReducers'\nimport { routeReducer } from './reducers/routeReducer'\nimport { saveShippingAddress } from './actions/cartActions'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productReviewCreate: productReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListyMyReducer,\n    keyword: routeReducer,\n    savedAddresses: getSavedAddressesReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\n\nconst initialState = {\n    cart: {cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: {userInfo: userInfoFromStorage}\n};\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\n\nexport default store","// Reducer is a function that takes in current state and an action - what we want to do with our current state, it will manipulate our state and then return a new state into the store\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = {products:[]}, action) => {\n    switch(action.type){ \n        case PRODUCT_LIST_REQUEST:\n            return {loading:true, products:[]}\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading:false, \n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                // variants: action.payload.variants\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return {loading:false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = {product: {reviews: [], variants: []}}, action) => {\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading:true, ...state}\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading:false, product: action.payload}\n\n        case PRODUCT_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch(action.type){\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading:true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading:false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading:false, error: action.payload}\n        \n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n","import { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS\n} from '../constants/cartConstants'\n\n\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.productId === item.productId && x.variantId === item.variantId)\n\n            if(existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.productId === existItem.productId && x.variantId === existItem.variantId ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            const pId = action.payload.productId\n            const vId = action.payload.variantId\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.productId !==pId || x.variantId !== vId)\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        \n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default: \n            return state\n    }\n\n\n}","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_RESET,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                success: true,\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_CREATE_RESET:\n            return {}\n        default: \n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_DETAILS_RESET:\n            return {\n                loading: false,\n                orderItems: [],\n                shippingAddress: {}\n            }\n\n        default: \n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_PAY_RESET:\n            return {}\n\n        default: \n            return state\n    }\n}\n\nexport const orderListyMyReducer = (state = {orders: []}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n        default: \n            return state\n    }\n}","export const routeReducer = (state = '', action) => {\n    switch(action.type){ \n        case 'UPDATE_KEYWORD':\n            return {keyword: action.payload}\n\n        default:\n            return state\n    }\n}\n","import jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\n\n\nlet baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:3000\"\n\n\nconst axiosInstance = axios.create({\n    baseURL,\n    headers: {\n        'Content-type': 'application/json',\n     }\n})\n\n\naxiosInstance.interceptors.request.use( async req => {\n\n    let userInfo = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n    req.headers['Authorization'] = `Bearer ${userInfo?.access}`\n    const token = jwt_decode(userInfo?.access)\n    const isExpired = dayjs.unix(token.exp).diff(dayjs()) < 1;\n    if(!isExpired) return req\n\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            'Refresh-attempt': true\n        }\n    }\n     \n    const {data} = await axios.post(\n       '/api/users/login/refresh/',\n        {\n           'refresh': userInfo.refresh,\n        },\n        config\n       )\n\n    // data['username'] = userInfo.username\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    req.headers.Authorization = `Bearer ${data.access}`\n\n    return req\n})\n\nexport default axiosInstance","import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_OTP_REQUEST,\n    USER_OTP_FAIL,\n    USER_OTP_SUCCESS,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n\n    GET_USER_ADDRESSES_REQUEST,\n    GET_USER_ADDRESSES_SUCCESS,\n    GET_USER_ADDRESSES_FAIL,\n } from '../constants/userConstants'\n import { ORDER_LIST_MY_RESET, ORDER_DETAILS_RESET, ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n import {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n\n import axiosInstance from '../axiosInstance'\n\n\n\n\n export const login = (username, password) => async (dispatch) => {\n     try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        }\n        )\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {\n                'username': username,\n                'password': password\n            },\n            config\n            )\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n     } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n     };\n }\n\n export const logout = () => async (dispatch) => {\n     localStorage.removeItem('userInfo')\n     dispatch({type: USER_LOGOUT})\n     dispatch({type: USER_DETAILS_RESET})\n     dispatch({type: ORDER_LIST_MY_RESET})\n     dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n     dispatch({type: ORDER_DETAILS_RESET})\n     dispatch({type: ORDER_CREATE_RESET })\n\n }\n\n export const register = (userName, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n           type: USER_REGISTER_REQUEST\n        }\n        )\n        const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n        }\n  \n        const {data} = await axios.post(\n               '/api/users/register/',\n           {    'username': userName,\n                'email': email,\n                'password': password\n           },\n           config\n           )\n           dispatch({\n               type: USER_REGISTER_SUCCESS,\n               payload: data\n           })\n\n        //    dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data\n        //     })\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_REGISTER_FAIL,\n           payload: Object.values(error.response\n           ? error.response.data\n           : error.message)\n       })\n    };\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: USER_DETAILS_REQUEST\n        }\n        )\n\n        const {data} = await axiosInstance.get(`/api/users/${id}/`);\n\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n        \n\n    } catch (error) {\n       dispatch({\n           type: USER_DETAILS_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {data} = await axiosInstance.put(`/api/users/profile/update/`,\n            user,\n        );\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n\n        dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload: error.response && error.response.data \n        ? Object.values(error.response.data)\n        : error.message\n       })\n    };\n}\n\nexport const sendOTP = (OTP, username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_OTP_REQUEST\n         }\n         )\n  \n       const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n       }\n\n       const {data} = await axios.post(\n           '/api/users/login/OTP',\n           {   'OTP': OTP,\n               'username': username,\n               'password': password\n           },\n           config\n           )\n\n           dispatch({\n               type: USER_LOGIN_SUCCESS,\n               payload: data\n           })\n           dispatch({\n            type: USER_OTP_SUCCESS,\n            payload: data\n        })\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_OTP_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n\nexport const loginWithOTP = (OTP, username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n         }\n         )\n  \n       const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n       }\n\n       const {data} = await axios.post(\n           '/api/users/login/OTP',\n           {   'OTP': OTP,\n               'username': username,\n               'password': password\n           },\n           config\n           )\n\n           dispatch({\n               type: USER_LOGIN_SUCCESS,\n               payload: data\n           })\n\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_LOGIN_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n\nexport const getSavedAddresses = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: GET_USER_ADDRESSES_REQUEST\n         }\n         )\n       const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n       }\n       const {data} = await axiosInstance.get('/api/users/address/');\n\n        dispatch({\n               type: GET_USER_ADDRESSES_SUCCESS,\n               payload: data\n           })\n\n    } catch (error) {\n       dispatch({\n           type: GET_USER_ADDRESSES_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}","import React, {useState} from 'react'\nimport { Button, Form, Col } from 'react-bootstrap'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nfunction SearchBox() {\n\n    const [keyword, setKeyword] = useState('')\n\n    let navigate = useNavigate();\n    let location = useLocation();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if(keyword) {\n            navigate(`/?keyword=${keyword}&page=1`)\n        } else {\n            navigate(location.pathname)\n        }\n    }\n    return (\n\n    <Col md={6}>\n        <Form onSubmit={submitHandler} className='flex mt-2' >\n            <Form.Control\n                size=\"sm\"\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            >\n            </Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2 inline'\n            >\n                Submit\n            </Button>\n        </Form>\n        </Col>\n\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\nimport { useNavigate } from 'react-router-dom'\n\n\nfunction Header() {\n    let navigate = useNavigate()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const dispatch = useDispatch() \n\n    const logoutHandler = () => {\n        dispatch(logout())\n        navigate('/')\n    }\n\n    return (\n        <header>\n\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fish N Stik</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox  />\n                        <Nav className=\"mr-auto\">\n\n                            <Container className='flex width wrap'>\n                            <NavDropdown title='Our products'>\n                                <LinkContainer to='/?keyword=hooks'>\n                                    <NavDropdown.Item>\n                                        Hooks\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=snaps'>\n                                    <NavDropdown.Item>\n                                        Snaps\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=swivels'>\n                                    <NavDropdown.Item>\n                                        Swivels\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=fishingline'>\n                                    <NavDropdown.Item>\n                                        Fishing Line\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n\n                        {userInfo ? (\n                            <NavDropdown title='Welcome!' id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>\n                                        Profile\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                </NavDropdown.Item>\n                                \n                            </NavDropdown>\n                        ): (\n                            <LinkContainer to='/login'>\n                                <Nav.Link><i className=\"fas fa-userf\"></i>Login</Nav.Link>\n                            </LinkContainer>\n                        )\n                    }   \n\n\n\n                            <LinkContainer to='/cart' className='left'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            </Container>\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'      \n\nfunction Footer() { \n    return (\n        <footer>\n            <Container>\n                <Row className='flex align light'>\n                    <Col className=\"text-center py-3\">Copyright &copy; Fish N Stik</Col>\n                    <Col>\n                        <a href='/#/aboutus'>About us</a>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating( {value, text, color} ) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{color}} className={\n                    value >= 1\n                    ? 'fa fa-star'\n                    : value >= 0.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 2\n                    ? 'fa fa-star'\n                    : value >= 1.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 3\n                    ? 'fa fa-star'\n                    : value >= 2.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 4\n                    ? 'fa fa-star'\n                    : value >= 3.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 5\n                    ? 'fa fa-star'\n                    : value >= 4.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            \n            <p className='light'> {text && text}</p>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\n\nfunction Product({ product }) { \n    return (\n        <Card className=\"my-1 p-1 rounded max-content\">\n            <Link to={`/product/${product._id}`}>\n                <div className='objectfit'>\n                    <Card.Img className='fullsize' src={product.image}></Card.Img>\n                </div>\n            </Link>\n            <Card.Body>\n                <Link className=\"product-links\" to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                {product.catchPhrase ? <span>{product.catchPhrase}</span> : ''}\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\n                    </div>\n                </Card.Text>\n\n                <Card.Text className='light border-top' >\n                   {product.numVariants} types \n                </Card.Text>\n                <Card.Text className='light'>\n                   From ${Math.min(...product.variants.map(el=>el.price))} each\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\n    \n    if(keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return ( pages>1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x)=> (\n                    <LinkContainer \n                        key={x+1}\n                        to={`/?keyword=${keyword}&page=${x+1}`}\n                    >   \n                        <Pagination.Item\n                            active={x+1 === page}\n                        >\n                            {x+1}\n                        </Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { useLocation } from 'react-router-dom'\nimport { updateKeyword } from '../actions/routeAction'\n\n\n\nfunction HomeScreen() {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products, page, pages} = productList\n\n    // const [searchParams, setSearchParams] = useSearchParams();\n    // const keyword = searchParams.get('keyword')\n\n    let location = useLocation();\n    let keyword = location.search\n\n\n    // const [prevKeyword, setPrevKeyword] = useState(keyword)\n\n    useEffect(() => {\n        dispatch(updateKeyword(keyword))\n        dispatch(listProducts(keyword))\n       \n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                :     \n                <div>     \n                    <Row className='flex'>\n                        {products.map(product => (\n                            <Col key={product._id} className='gap2' >\n                                <Product product={product} keyword={keyword} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\n                </div>\n            }\n  \n        </div>\n    )\n}\n\nexport default HomeScreen\n","export const updateKeyword = (keyword) => async (dispatch) => {\n    \n    dispatch({\n        type: 'UPDATE_KEYWORD',\n        payload: keyword\n    })\n\n}","import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL, \n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n} from '../constants/productConstants'\n\nimport axiosInstance from '../axiosInstance'\n\n\nexport const listProducts = (keyword='') => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST})\n        \n        const {data} = await axios.get(`/api/products/${keyword}`);\n \n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    } \n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\n\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\n\n\n        const {data} = await axiosInstance.post(`/api/products/${productId}/reviews/`,\n            review\n        );\n\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n         \n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Table, Modal} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport { logout } from '../actions/userActions'\n\n\nfunction ProductScreen() {\n\n    // Main picture modal\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n\n    // Variant picture modals\n    const [showModalVariants, setShowModalVariants] = useState(\n        new Array(15).fill(false)\n    )\n    const handleShowVariants = (position) => {\n        const updatedArray = showModalVariants.map((el, index) => index === position ? true : false)\n        setShowModalVariants(updatedArray)\n    }\n    const  handleCloseVariants = () => setShowModalVariants(new Array(15).fill(false))\n \n\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n    const [checkedState, setCheckedState] = useState(\n        new Array(15).fill(false)\n    );\n\n    \n    const [checkedBoxIndex, setCheckedBoxIndex] = useState(null)\n    \n\n    const handleOnChange = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) => index === position ? true : false);\n        setCheckedState(updatedCheckedState);\n        setCheckedBoxIndex(position)\n    }\n\n\n    const dispatch = useDispatch();\n    \n    const keyword = useSelector(state=>state.keyword)\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    let { loading:loadingProductReview, error:errorProductReview, success:successProductReview } = productReviewCreate\n\n    const productId = useParams();\n    let navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (errorProductReview?.includes('token not valid')) {\n            dispatch(logout())\n        } \n        if(successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n        }\n\n        dispatch(listProductDetails(productId.id))\n    }, [dispatch, successProductReview, errorProductReview, productId.id])\n\n    const addToCartHandler = (variantId) => {\n   \n        navigate(`/cart/${productId.id}?qty=${qty}&variant=${variantId}`)\n    }\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(productId.id, {rating, comment}))\n\n    }\n\n\n\n    return (\n        <div className='hidden'>\n            \n            <Link to={keyword ? `/${keyword.keyword}` : '/'} className='btn btn-light my-3'>Go back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                    <div>\n           \n                        <Row>\n                            <Col md={4}>\n                                <Image onClick={handleShow} src={product.image} alt={product.name} fluid className='productImage'></Image>\n                            </Col>\n\n                            <Modal show={showModal} onHide={handleClose}>\n                                <Modal.Body>\n                                    <Image src={product.image} alt={product.name} fluid className='modalImage fullsize'>\n                                    </Image>                                \n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n        \n                            <Col md={6}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h3>{product.name}</h3>\n                                    </ListGroup.Item>\n            \n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Description: {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n            {product.numVariants === 1 && (           \n                            <Col md={5}>\n                                <Card md={5} className='my-5'>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>\n                                                        Price:\n                                                    </Col>\n                                                    <Col>\n                                                        <strong>${product.variants[0].price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n            \n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>\n                                                        Status:\n                                                    </Col>\n                                                    <Col>\n                                                        { product.variants[0].countInStock > 0 ? 'In Stock' : 'Out of Stock' }\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.variants[0].countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Select value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                                {                           \n                                                                    [...Array(product.variants[0].countInStock).keys()].map((x) => (\n                                                                        <option key={x+1} value={x+1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Select>\n                                                        \n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n            \n                                            <ListGroup.Item>\n                                                <Button \n                                                    onClick={\n                                                        ()=> (\n                                                        addToCartHandler(product.variants[0]._id))\n                                                    }\n                                                    className='btn-block' \n                                                    disabled={product.variants[0].countInStock === 0} \n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n            \n                                        </ListGroup>\n                                    </Card>\n                                </Card>\n                            </Col>\n            )} \n\n            {product.numVariants > 1 && (   \n                <div> \n                                    <Table size='sm' hover className='my-5 margin'>\n                                        <thead>\n                                            <tr className='bold light'>\n                                                <th>Image</th>\n                                                <th>Description</th>\n                                                <th>Price / each</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody>\n                                            {product.variants.map((variant, index) => (\n                                            <tr \n                                            onClick={()=> handleOnChange(index)} \n                                            className={checkedState[index] ? 'marked' : ''} \n                                            key={variant._id}\n                                            >\n                                                <td>\n                                                    <Image onClick={()=> handleShowVariants(index)} className='thumbsize zindex' src={variant.image} alt={variant.name} thumbnail></Image>\n                                                    <Modal show={showModalVariants[index]} onHide={handleCloseVariants}>\n                                                        <Modal.Body>\n                                                            <Image src={variant.image} alt={variant.description} fluid className='modalImage fullsize'>\n                                                            </Image>                                \n                                                        </Modal.Body>\n                                                        <Modal.Footer>\n                                                            <Button variant=\"secondary\" onClick={handleCloseVariants}>\n                                                                Close\n                                                            </Button>\n                                                        </Modal.Footer>\n                                                    </Modal>\n\n                                                </td>\n                                                <td>\n                                                    {variant.description}\n                                                    <br />\n                                                    {variant.relatedProductLink && (\n                                                         <Link to={`/product/${product._id}`} className='btn-sm small green'>Related product link</Link>\n                                                    )}\n                                                </td>\n                                                <td className='smallscreenRow'>\n                                                        {variant.price}\n                                                </td>\n                                             </tr>\n            \n                                           \n                                            ))}\n                                        </tbody>\n                                    </Table>\n{product.variants[checkedBoxIndex] && ( \n                                        <Card md={5} className='my-5 justify-content-center'>\n                                            <Card>\n                                                <ListGroup variant='flush'>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Price / total:\n                                                            </Col>\n                                                            <Col>\n                                                            {product.variants[checkedBoxIndex].price} x {qty} = ${product.variants[checkedBoxIndex].price* qty }\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Status:\n                                                            </Col>\n                                                            <Col>\n                                                                { product.variants[checkedBoxIndex].countInStock > 0 ? 'In Stock' : 'Out of Stock' }\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                    { product.variants[checkedBoxIndex].countInStock > 0 && (\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Amount ready to ship:\n                                                            </Col>\n                                                            <Col>\n                                                                {product.variants[checkedBoxIndex].countInStock}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                    )}\n                                                    {product.variants[checkedBoxIndex].countInStock > 0 && (\n                                                        <ListGroup.Item>\n                                                            <Row>\n                                                                <Col>Qty</Col>\n                                                                <Col>\n                                                                    <Form.Select value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                                        {                           \n                                                                            [...Array(product.variants[checkedBoxIndex].countInStock).keys()].map((x) => (\n                                                                                <option key={x+1} value={x+1}>\n                                                                                    {x + 1}\n                                                                                </option>\n                                                                            ))\n                                                                        }\n\n                                                                    </Form.Select>\n                                                                \n                                                                </Col>\n                                                            </Row>\n                                                            <Row className='center italic'>\n                                         \n                                                            </Row>\n                                                        </ListGroup.Item>\n                 \n                                                \n                                                    )}\n\n                                                    <ListGroup.Item>\n                                                        <Button \n                                                            onClick={()=>(addToCartHandler(product.variants[checkedBoxIndex]._id))}\n                                                            className='btn-block' \n                                                            disabled={product.variants[checkedBoxIndex].countInStock <= 0 } \n                                                            type='button'>\n                                                            Add to Cart\n                                                        </Button>\n                                                    </ListGroup.Item>\n\n                                                </ListGroup>\n                                            </Card>\n                                        </Card>\n                                        )}\n                </div>         \n            )} \n\n                        </Row>\n                        <Row>\n                            <Col md={6}>\n                                <h4>Recent reviews</h4>\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n                                <ListGroup variant='flush'>\n                                    {product.reviews.map((review) => (\n                                        <ListGroup.Item key={review._id}>\n                                            <strong>{review.name}</strong>\n                                            <Rating value={review.rating} color='#f8e825' />\n                                            <div className='light flex'>\n                                            <p style={{'marginRight': '1rem'}}>{review.createdAt.substring(0,10)}</p>\n                                            <p>{review.comment}</p>\n                                            </div>\n                                        </ListGroup.Item>\n                                    ))}\n                                    <ListGroup.Item>\n                                        <h4>Write a review</h4>\n                                        {loadingProductReview && <Loader />}\n\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\n\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                        \n\n                                        {userInfo ? (\n                                            <Form onSubmit={submitHandler}>\n                                                <Form.Group controlId='rating'>\n                                                    <Form.Label>Rating</Form.Label>\n                                                    <Form.Control \n                                                        as='select'\n                                                        value={rating}\n                                                        onChange={(e)=> setRating(e.target.value)}\n                                                    >\n                                                        <option value=''>Select...</option>\n                                                        <option value='1'>1 - Poor</option>\n                                                        <option value='2'>2 - Fair</option>\n                                                        <option value='3'>3 - Good</option>\n                                                        <option value='4'>4 - Very Good</option>\n                                                        <option value='5'>5 - Excellent</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                \n                                                <Form.Group controlId='comment'>\n                                                    <Form.Label>Review</Form.Label>\n                                                    <Form.Control\n                                                        as='textarea'\n                                                        rows='5'\n                                                        value={comment}\n                                                        onChange={(e)=> setComment(e.target.value)}\n                                                    ></Form.Control>\n                                                </Form.Group>\n\n                                                <Button\n                                                    disabled={loadingProductReview}\n                                                    type='submit'\n                                                    variant='primary'\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Form>\n                                        ) : (\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                        )}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                    </div>\n                    )\n\n\n\n\n            }\n        \n\n        </div>\n    )\n}\n\nexport default ProductScreen\n","import React, {useEffect} from 'react'\nimport { Link, useParams, useNavigate, useLocation, useSearchParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n\n//removed {location}\nfunction CartScreen() {\n    const productId = useParams().id\n    let navigate = useNavigate()\n    let qty = parseInt(useLocation().search.split('=')[1])\n    if(!qty) qty = 1\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const variantId = Number(searchParams.get('variant'))\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n    // console.log({cartItems}) \n\n    //useDispatch to dispatch action - only in event of productId\n    useEffect(() => { \n        if(productId) {\n            dispatch(addToCart(productId, variantId, qty))\n        }\n    }, [dispatch, productId, variantId, qty])\n\n    const removeFromCartHandler = (productId, variantId) => {\n        dispatch(removeFromCart(productId, variantId))\n    }\n\n    const checkoutHandler = () => {\n        navigate('/login?redirect=/shipping')\n    }\n\n    return (\n       <Row>\n           <Col md={12}>\n               <h1>Shopping Cart</h1>\n               {cartItems.length === 0 ? (\n                   <Message variant='info'>\n                       Your cart is empty <Link to='/'>Go Back</Link>\n                   </Message>\n               ) : (\n                   <ListGroup variant='flush'>\n                       {cartItems.map(item => (\n                           <ListGroup.Item key={`p${item.productId}v${item.variantId}`} className='border-top border-bottom' >\n                               <Row>\n                                   <Col>\n                                        <Image src={item.image} alt={item.name} fluid rounded className='thumbsize'></Image>\n                                   </Col>\n                                   <Col md={4}>\n                                       <Link \n                                            className=\"product-links\" \n                                            to={`/product/${item.productId}`}\n                                        >\n                                            <strong className='bold'>{item.name}</strong> <p className='light'>({item.variantDescription})</p>\n                                        </Link>\n                                       \n                                   </Col>\n                                   <Col md={1}>\n                                        ${item.price} <p className='light'>(each)</p>\n                                   </Col>\n                                   <div className='flex gap'>\n                                   <Col md={4}> \n                                        <Form.Select\n                                            value={item.qty} \n                                            onChange={(e) => dispatch(addToCart(item.productId, item.variantId, Number(e.target.value)))}>\n                                            \n                                            {                           \n                                                [...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x+1} value={x+1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))\n                                            }\n                                        </Form.Select>\n                                   </Col>\n                                   <Col md={1}>\n                                        <Button\n                                            type='button'\n                                            variant='light'\n                                            onClick={() => removeFromCartHandler(item.productId, item.variantId)}\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button> \n                                   </Col>\n                                   </div>\n                               </Row>\n                           </ListGroup.Item>\n                       ))}\n                   </ListGroup>\n               )}\n           </Col>\n           <Col md={6}>\n               <Card className='my-5'>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2>\n                               Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\n                            </h2>\n                           ${cartItems.reduce((acc,item) => acc + item.qty * item.price, 0).toFixed(2)}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button\n                                type='button'\n                                className='bnt-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                           >\n                               Proceed to Checkout\n                           </Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n           \n               </Card>\n           </Col>\n       </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({children}) {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login, loginWithOTP } from '../actions/userActions'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\n\nfunction LoginScreen() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [needOTP, setNeedOTP] = useState(false)\n    const [OTP, setOTP] = useState('')\n\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate()\n\n    let redirect = useLocation().search.split('=')[1]\n    if(!redirect) redirect='/'\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const {error, loading, userInfo} = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            navigate(redirect)\n        }\n\n        if(error && error[0].includes('We were not able to verify your email')) {\n            setNeedOTP(true)\n        }\n\n    }, [navigate, userInfo, redirect, error]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    const submitOTP = (e) => {\n        e.preventDefault()\n        dispatch(loginWithOTP(OTP, username, password))\n    }\n\n    return (\n        \n        <div>\n{error && <Message variant='danger'>{error}</Message>}\n\n{loading && <Loader />}\n\n{!needOTP ? (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n\n   \n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='username'>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        required\n                        type='Username'\n                        placeholder='Your username'\n                        value={username}\n                        onChange={(e)=>setUsername(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New to our site? \n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n) :\n(\n        <FormContainer>\n            <h1>Validate Email</h1>\n            <br />\n            <h5>An OTP was sent to email associated with your account. Please enter it here to complete registration.</h5>\n            <br />\n    \n            <Form onSubmit={submitOTP}>\n\n                <Form.Group controlId='OTP'>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='OTP from your email'\n                        value={OTP}\n                        onChange={(e)=>setOTP(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Submit\n                </Button>\n            </Form>\n        </FormContainer>\n)}\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register, sendOTP } from '../actions/userActions'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nfunction RegisterScreen() {\n\n    const [userName, setUserName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [OTP, setOTP] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate()\n\n    let redirect = useLocation().search.split('=')[1]\n    if(!redirect) redirect='/'\n\n    const userRegister = useSelector(state => state.userRegister)\n\n    const {error, loading, OTPready, userInfo} = userRegister\n\n    // If user is already logged in, return user to previous page\n    useEffect(() => {\n        if (userInfo) {\n            navigate(redirect)\n        }\n    }, [navigate, userInfo, redirect]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(userName, email, password))\n            setMessage('')\n        }\n    }\n\n    const submitOTP = (e) => {\n        e.preventDefault()\n        dispatch(sendOTP(OTP, userName, password))\n    }\n    return (\n\n        <div>\n\n\n        {error && <Message variant='danger'>{error}</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {loading && <Loader />}\n\n {!OTPready ? (\n\n     <FormContainer>\n            <h1>Register</h1>\n\n \n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='username'>\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Please pick a username'\n                        value={userName}\n                        onChange={(e)=>setUserName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Your email address'\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Please confirm your password'\n                        value={confirmPassword}\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n\n\n            <Row className='py-3'>\n                <Col>\n                    Already have an Account?\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> Sign In</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n ) :\n(\n        <FormContainer>\n            <h1>Validate Email</h1>\n            <br />\n            <h5>An OTP was sent to your email ({email}) for validation. Please enter it here to complete registration.</h5>\n            <br />\n    \n            <Form onSubmit={submitOTP}>\n\n                <Form.Group controlId='OTP'>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='OTP from your email'\n                        value={OTP}\n                        onChange={(e)=>setOTP(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Submit\n                </Button>\n            </Form>\n\n        </FormContainer>\n)}\n        </div>\n\n       )\n}\n\nexport default RegisterScreen\n","import React, {useState, useEffect} from 'react'\nimport { Form, Button, Row, Col, Table, ListGroup} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { useNavigate } from 'react-router-dom'\nimport { USER_LOGOUT, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\n\nfunction ProfileScreen() {\n    const [showResetPassword, setShowResetPassword] = useState(false)\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success, error: errorUpdatePassword } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const {loading:loadingOrders, error: errorOrders, orders } = orderListMy\n    // If user is not already logged in, return user to previous page\n    useEffect(() => {\n        if (!userInfo) {\n            navigate('/login')\n        } \n        if (!user || !user.username || success ) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\n            dispatch(getUserDetails('profile'))\n            dispatch(listMyOrders())\n            setPassword('')\n            setPassword2('')\n            setOldPassword('')\n            setShowResetPassword(false)\n        }\n        if (error === 'Given token not valid for any token type' || errorUpdatePassword === 'Given token not valid for any token type' ) {\n            dispatch({type: USER_LOGOUT})\n        } \n   \n\n    }, [navigate, userInfo, dispatch, user, success, error, errorUpdatePassword]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'old_password': oldPassword,\n                'password': password,\n                'password2': password2\n            }))\n            setMessage('')\n        }\n\n    }\n\n\n    return (\n        <Row>\n            <Col>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {errorUpdatePassword && <Message variant='danger'>{errorUpdatePassword}</Message>}\n                {success && <Message variant='success'>Password updated</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item className='flex gap'>\n                            <span><strong>Username:</strong>{user && user.username}</span>\n                            <span className='left'><strong>Email:</strong>{user && user.email}</span>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button onClick={()=>setShowResetPassword(!showResetPassword)}>Reset Password</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant='flush'>\n\n     {showResetPassword &&            \n                    <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='oldpassword'>\n                                <Form.Label>Old Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Please enter your old password'\n                                    value={oldPassword}\n                                    onChange={(e) => setOldPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='password'>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Enter Password'\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='password2'>\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    value={password2}\n                                    onChange={(e) => setPassword2(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                                <Button type='submit' variant='primary'>\n                                Update\n                                </Button>\n                        </Form> \n}\n                        \n\n                    </ListGroup>\n\n\n\n\n\n\n\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0,10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn=sm'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n            \n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL, \n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET\n} from '../constants/orderConstants'\n\nimport axiosInstance from '../axiosInstance'\n\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_CREATE_REQUEST\n        })\n\n        const {data} = await axiosInstance.post(`/api/orders/add/`,\n            order\n        );\n\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems');\n        \n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n    };\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ \n           type: ORDER_DETAILS_REQUEST\n        })\n\n        const {data} = await axiosInstance.get(`/api/orders/${id}/`);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n        console.log(error.response)\n\n       dispatch({\n           type: ORDER_DETAILS_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_PAY_REQUEST\n        })\n\n\n        const {data} = await axiosInstance.put(`/api/orders/${id}/pay/`,\n            paymentResult\n        );\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n       dispatch({\n           type: ORDER_PAY_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {data} = await axiosInstance.get(`/api/orders/myorders/`);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n       dispatch({\n           type: ORDER_LIST_MY_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}\n\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    return (\n        <Nav className='justify-content-center mb-1'>\n            <Nav.Item>\n                {step1 ? (\n                <LinkContainer to='/login'>\n                    <Nav.Link>Login</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                <LinkContainer to='/shipping'>\n                    <Nav.Link>Shipping</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                <LinkContainer to='/payment'>\n                    <Nav.Link>Options</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Options</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                <LinkContainer to='/placeorder'>\n                    <Nav.Link>Place Order</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState} from 'react';\n\nconst AddressBox = ({index, input, highlighted, selectedAddress}) => {\n    const {name, address, apartment, city, state, postalCode, phone} = input\n\n    return (\n    <ul  \n    className={`${highlighted ? 'address-box-highlight' : ''} address-box`}\n    onClick={()=> {\n        selectedAddress(input, index)\n    }}>\n        <li>{name}</li>\n        <li>{address}</li>\n        {apartment && <li>{apartment}</li>} \n        <li>{city}, {state} {postalCode}</li> \n        {phone && <li>Phone: {phone}</li>} \n    </ul>\n    )\n}\n\nexport default AddressBox;","import React, { useState, useEffect } from 'react'\nimport { Form, Button} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useNavigate } from 'react-router-dom'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport { getSavedAddresses } from '../actions/userActions'\nimport axiosInstance from '../axiosInstance'\nimport AddressBox from '../components/AddressComponent';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message'\n\nfunction ShippingScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const {addresses, success, loading} = useSelector(state => state.savedAddresses)\n    const [whichHighlighted, setWhichHighlighted] = useState(new Array(10).fill(false))\n    const { shippingAddress } = cart\n    const [addNewAddress, setAddNewAddress] = useState(false)\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n    const [message, setMessage] = useState('')\n\n    const [name, setName] = useState(shippingAddress.name)\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [apartment, setApartment] = useState(shippingAddress.apartment)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [state, setState] = useState(shippingAddress.state)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [phone, setPhone] = useState(shippingAddress.phone)\n\n\n\n    useEffect(()=>dispatch(getSavedAddresses()), []);\n\n\n    \n\n\n\n    const selectedAddress = (selected, index) => {\n        setName(selected.name)\n        setAddress(selected.address)\n        setApartment(selected.apartment)\n        setCity(selected.city)\n        setState(selected.state)\n        setPostalCode(selected.postalCode)\n        setPhone(selected.phone)\n        setWhichHighlighted(whichHighlighted.map((el, id) => id===index ? true : false))  \n        setMessage('') \n    }\n    \n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(!name) {\n            setMessage('Please select address or add a new one')\n            return false\n        }\n        setMessage('')\n        dispatch(saveShippingAddress({name, address, apartment, city, state, postalCode, phone}))\n        navigate('/payment')\n    }\n    \n\n    const newAddressHandler = () => {\n        setAddNewAddress(!addNewAddress)\n        setWhichHighlighted(new Array(10).fill(false))\n        setName('')\n        setAddress('')\n        setApartment('')\n        setCity('')\n        setState('')\n        setPostalCode('')\n        setPhone('')   \n        setMessage('')\n    }\n\n    const oldAddresses = addresses?.map((el, index)=>(\n        <AddressBox \n            key={index} \n            index={index} \n            input={el} \n            selectedAddress={selectedAddress}\n            highlighted = {whichHighlighted[index]}\n        ></AddressBox>\n    ))\n\n    oldAddresses?.unshift(<div key='title'>Select from previously used addresses</div>)\n\n    const newAddressForm = (<Form onSubmit={submitHandler}> \n    <Form.Group controlId='name'>\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n            required\n            type='text'\n            placeholder='Recipient name or business'\n            value={name ? name : ''}\n            onChange={(e)=>setName(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='address'>\n        <Form.Label>Address</Form.Label>\n        <Form.Control\n            required\n            type='text'\n            placeholder='Enter street address'\n            value={address ? address : ''}\n            onChange={(e)=>setAddress(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='apartment'>\n        <Form.Label>Apartment</Form.Label>\n        <Form.Control\n            type='text'\n            placeholder='If applicable, enter apartment or suite'\n            value={apartment ? apartment : ''}\n            onChange={(e)=>setApartment(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='city'>\n        <Form.Label>City</Form.Label>\n        <Form.Control\n            required\n            type='text'\n            placeholder='Enter city'\n            value= {city ? city : ''}\n            onChange={(e)=>setCity(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='state'>\n        <Form.Label>State</Form.Label>\n        <Form.Control\n            required\n            type='text'\n            placeholder='Enter state'\n            value={state ? state : ''}\n            onChange={(e)=>setState(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='postalCode'>\n        <Form.Label>PostalCode</Form.Label>\n        <Form.Control\n            required\n            type='text'\n            placeholder='Enter postalCode'\n            value={postalCode ? postalCode : ''}\n            onChange={(e)=>setPostalCode(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n    <Form.Group controlId='phone'>\n        <Form.Label>Phone</Form.Label>\n        <Form.Control\n            type='text'\n            placeholder='Not required but helpful for sharing any information related to your order'\n            value={phone ? phone : ''}\n            onChange={(e)=>setPhone(e.target.value)}\n        >\n        </Form.Control>\n    </Form.Group>\n        <div className='flex gap3'>\n            <Button type='submit' variant='primary' className='my-3'>\n                Continue \n            </Button>\n        {addresses &&\n            <a onClick={newAddressHandler} className='extrabox' >\n                Use address on file\n            </a>\n        }\n        </div>\n\n</Form>)\n\n\n\n\n    return (\n        <div>\n        {message && <Message variant='danger'>{message}</Message>}\n        {loading && <Loader />}\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            {addresses ? (\n                <div>\n                {addNewAddress ? '' : oldAddresses }\n\n                {!addNewAddress &&  \n                    <div className='flex gap3'>\n\n                    \n                    <Button onClick={submitHandler} variant='primary' className='my-3'>\n                        Continue\n                    </Button>\n\n\n                    <a onClick={newAddressHandler} className='extrabox'>\n                        Send to a different address\n                    </a>\n                    </div>\n                }\n\n                {addNewAddress ? newAddressForm : ''}\n                </div>\n            \n            ):\n            \n            newAddressForm\n            \n            }\n\n            \n        </FormContainer>\n        </div>\n    )\n}\n\nexport default ShippingScreen\n","import React, {useState} from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useNavigate } from 'react-router-dom'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n\n    const [paymentMethod, setPaymentMethod ] = useState('PayPal or Credit Card')\n    if(!shippingAddress.name) {\n        navigate('/shipping/')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(!shippingAddress.name) {\n            navigate('/shipping')\n            return\n\n        }\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>\n                        Select Method\n                    </Form.Label>\n                    <Col>\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='paypal' name='paymentMethod' checked onChange={(e) => setPaymentMethod(e.target.value)}>\n                        \n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, {useState, useEffect} from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { logout } from '../actions/userActions'\nimport { useNavigate } from 'react-router-dom'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n\n\nfunction PlaceOrderScreen() {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    let {order, error, success} = orderCreate\n    const [instructions, setInstructions] = useState('')\n    const dispatch = useDispatch();\n    let navigate = useNavigate()\n\n    const cart = useSelector(state => state.cart)\n\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + (item.price * item.qty), 0).toFixed(2);\n\n    cart.shippingPrice = (cart.itemsPrice > 100 ?  0 : 10).toFixed(2);\n\n    cart.taxPrice = ((0.082) * cart.itemsPrice).toFixed(2);\n\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.taxPrice) +\n        Number(cart.shippingPrice)\n    ).toFixed(2);\n    \n    useEffect(() => { \n\n        if(cart.cartItems.length === 0) {\n            navigate('/')\n        }\n        if(!cart.shippingAddress.name) {\n            navigate('/shipping/')\n        }\n        if(!cart.paymentMethod) {\n            navigate('/payment');\n        }\n        if(success) {\n            navigate(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n        if (error?.includes('token not valid')) {\n            \n            dispatch(logout())\n            navigate('/login/')\n        } \n\n    }, [error, success, dispatch, navigate, cart])\n\n\n    const placeOrder = () => {\n        \n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            instructions: instructions\n        }))\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n\n         \n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <ul className='list'>\n                                <li className='light my-2'>Shipping Address:</li>\n                                <li>{cart.shippingAddress.name}</li>  \n                                <li>{cart.shippingAddress.address}</li>\n                                {cart.shippingAddress.apartment ? <li>Apt/Ste: {cart.shippingAddress.apartment}</li> : ''} \n                                <li>{cart.shippingAddress.city}, {cart.shippingAddress.state} {cart.shippingAddress.postalCode}</li>\n                                <li>{cart.shippingAddress.phone}</li>\n                            </ul>\n                        </ListGroup.Item>\n    \n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method:</strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4 className='green'>Instructions</h4>\n                            <Form.Control\n                                type='text'\n                                placeholder='Any special instructions for this order?'\n                                value={instructions ? instructions : ''}\n                                onChange={(e)=>setInstructions(e.target.value)}\n                            >\n                            </Form.Control>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? \n                            <Message variant='info'>Your cart is empty</Message> :\n                            (   \n                                <ListGroup variant='flush'>\n\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image className='thumbsize'src={item.image} alt={item.name} fluid rounded></Image>\n                                                </Col>\n\n                                                <Col >\n                                                <Link \n                                                className=\"product-links\" \n                                                to={`/product/${item.productId}`}\n                                                >\n                                                    <strong className='bold'>{item.name}</strong> <p className='light'>({item.variantDescription})</p>\n                                                </Link>\n\n\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    )) \n                                    }\n\n                                </ListGroup>\n\n                            )\n                            }\n                        </ListGroup.Item>\n                        \n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n \n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button \n                                    type='button'\n                                    className='btn-block'\n                                    disable={cart.cartItems.length === 0 ? true : undefined}\n                                    onClick={placeOrder}\n                                >\n                                    Place order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, {useState, useEffect} from 'react'\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { getOrderDetails, payOrder} from '../actions/orderActions'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\n\n\nfunction OrderScreen() {\n\n    const orderId = useParams().id;\n    let navigate = useNavigate()\n    \n    const dispatch = useDispatch();\n    const [errorPayPal, setErrorPayPal] = useState('')\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    let { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay, error: errorPay } = orderPay\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.REACT_APP_PAYPAL_CLIENT_ID}`\n        script.async = true\n        script.onload = () => { \n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n    \n    useEffect(() => { \n        if(!order || successPay || order._id !== Number(orderId)) {\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n        \n        if(error?.includes('token')) {\n            navigate(`/login?redirect=/order/${orderId}`)\n        }\n\n    \n    }, [dispatch, order, orderId, error, successPay, navigate])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    return loading ?  <Loader /> : \n    error ? <Message variant='danger'>{error}</Message> :\n    (\n        <div>\n            <h1>Order: </h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Contact info</h2>\n                            <span><strong>Email:</strong><a>{order?.user.email}</a></span>\n                            <br/>\n                            <span><strong>Phone</strong> { order?.shippingAddress.phone}</span>\n                            <br/>\n                            <br/>\n                            <p><strong>Shipping address for this order:</strong></p>\n                            <ul className='list'>\n                                <li>{ order?.shippingAddress.name}</li>\n                                <li>{order?.shippingAddress.address}</li>\n                                {order?.shippingAddress.apartment ? <li>{order?.shippingAddress.apartment}</li> : ''} \n                                <li>{order?.shippingAddress.city}, {order?.shippingAddress.state} {order?.shippingAddress.postalCode}</li>\n                            </ul>\n\n                            {order?.isDelivered ? (\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                            ) : order.trackingNumber ? (\n                                <Message variant='info'>{order.shippingService} {order.trackingNumber}</Message>\n                            ) :\n                            <Message variant='warning'>Not shipped</Message> \n                            }\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment</h2>\n                            <p>\n                                <strong> Payment method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            <p>\n                                <strong> Instructions: </strong>\n                                {order.instructions ? order.instructions : 'None given'}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Not paid{order.paidAt}</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order?.orderItems.length === 0 ? \n                            <Message variant='info'>Order is empty</Message> :\n                            (   \n                                <ListGroup variant='flush'>\n\n                                    {order?.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                           \n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}>{item.name} ({item.variantDescription})</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    ))\n                                    }\n\n                                </ListGroup>\n\n                            )\n                            }\n                        </ListGroup.Item>\n                        \n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {errorPay && <Message variant='danger'>{errorPay}</Message>}\n                                    {errorPayPal && <Message variant='danger'>{errorPayPal}</Message>}\n\n\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton \n                                            createOrder={(data, actions) => {\n                                                return actions.order.create({\n                                                purchase_units: [{\n                                                    amount: {\n                                                    currency_code: \"USD\",\n                                                    value: order.totalPrice\n                                                    },\n                                                    custom_id: orderId,\n                                                    shipping: {\n                                                        name: {\n                                                          full_name: order.shippingAddress.name\n                                                        },\n                                                        address: {\n                                                          address_line_1: order.shippingAddress.address,\n                                                          address_line_2: order.shippingAddress.apartment,\n                                                          admin_area_2: order.shippingAddress.city,\n                                                          admin_area_1: order.shippingAddress.state,\n                                                          postal_code: order.shippingAddress.postalCode,\n                                                          country_code: 'US',\n                                                        }\n                                                      }\n                                                   \n                                                }],\n                                                application_context: {\n                                                    locale: 'us-US',\n                                                    shipping_preference: 'SET_PROVIDED_ADDRESS',\n                                                  }\n                                            \n                                                });\n                                            }}\n                                            onSuccess={successPaymentHandler}\n                                            onError={(err)=>setErrorPayPal(err)}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderScreen\n","import React from 'react'\n\nfunction AboutUsScreen() {\n    return (\n        <div>\n            <h4>\"Your number 1 source for wholesale fishing equipment and terminal tackle\"</h4>\n            <p><strong>Located in: </strong>OFFICIAL The Ballpark of the Palm Beaches</p>\n            <p><strong>Address: </strong>5407 Haverhill Rd UNIT 339, West Palm Beach, FL 33407</p>\n            <p><strong>Hours: </strong>8:00am to 4:00pm weekdays</p>\n            <p><strong>Phone: </strong>(561) 686-7845</p>\n        </div>\n    )\n}\n\nexport default AboutUsScreen\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route, Routes} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport AboutUsScreen from './screens/AboutUsScreen'\n\n\n\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-1 width\">\n        <Container>\n          <Routes>\n            <Route path='/' element={<HomeScreen />} />\n            <Route path='/aboutus' element={<AboutUsScreen />} />\n            <Route path='/login' element={<LoginScreen />} />\n            <Route path='/register' element={<RegisterScreen />} />\n            <Route path='/profile' element={<ProfileScreen />} />\n            <Route path='/shipping' element={<ShippingScreen />} />\n            <Route path='/payment' element={<PaymentScreen />} />\n            <Route path='/placeorder' element={<PlaceOrderScreen />} />\n            <Route path='/order/:id' element={<OrderScreen />} />\n            <Route path='/product/:id' element={<ProductScreen />} />\n            <Route path='/cart/:id' element={<CartScreen />} />\n            <Route path='/cart/' element={<CartScreen />} />\n\n\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}