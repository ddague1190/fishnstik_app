{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","reducers/routeReducer.js","axiosInstance.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","actions/routeAction.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/AboutUsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_RESET","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_OTP_FAIL","USER_OTP_REQUEST","USER_OTP_SUCCESS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","variants","productReviewCreate","success","cart","cartItems","shippingAddress","item","existItem","find","x","productId","variantId","map","pId","vId","filter","paymentMethod","userLogin","userInfo","userRegister","OTPready","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","keyword","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","axiosInstance","axios","create","baseURL","process","headers","interceptors","request","use","a","req","access","token","jwt_decode","dayjs","unix","exp","diff","config","post","refresh","data","setItem","stringify","Authorization","logout","dispatch","removeItem","SearchBox","useState","setKeyword","navigate","useNavigate","location","useLocation","Col","md","Form","onSubmit","e","preventDefault","pathname","className","Control","size","name","onChange","target","value","Button","variant","Header","useSelector","useDispatch","Navbar","bg","collapseOnSelect","expand","Container","to","Brand","Toggle","Collapse","id","Nav","NavDropdown","title","Item","onClick","Link","Footer","Row","href","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","catchPhrase","Text","rating","numReviews","numVariants","Math","min","el","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","isAdmin","split","Pagination","Array","keys","active","HomeScreen","search","useEffect","updateKeyword","get","response","detail","message","listProducts","ProductScreen","showModal","setShowModal","handleClose","fill","showModalVariants","setShowModalVariants","handleCloseVariants","qty","setQty","setRating","comment","setComment","checkedState","setCheckedState","checkedBoxIndex","setCheckedBoxIndex","loadingProductReview","errorProductReview","successProductReview","useParams","includes","addToCartHandler","Image","alt","fluid","Modal","show","onHide","ListGroup","description","countInStock","xs","Select","disabled","Table","hover","index","position","updatedCheckedState","handleOnChange","updatedArray","handleShowVariants","thumbnail","relatedProductLink","length","review","createdAt","substring","getState","createProductReview","Group","controlId","Label","rows","addToCart","findIndex","variantDescription","CartScreen","parseInt","useSearchParams","searchParams","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","username","setUsername","password","setPassword","needOTP","setNeedOTP","OTP","setOTP","redirect","loginWithOTP","required","placeholder","login","RegisterScreen","userName","setUserName","email","setEmail","confirmPassword","setConfirmPassword","setMessage","sendOTP","Object","values","register","ProfileScreen","showResetPassword","setShowResetPassword","oldPassword","setOldPassword","password2","setPassword2","errorUpdatePassword","loadingOrders","errorOrders","put","updateUserProfile","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","setName","address","setAddress","apartment","setApartment","city","setCity","setState","postalCode","setPostalCode","phone","setPhone","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","instructions","setInstructions","itemsPrice","shippingPrice","taxPrice","disable","undefined","createOrder","OrderScreen","orderId","errorPayPal","setErrorPayPal","sdkReady","setSdkReady","loadingPay","successPay","errorPay","console","log","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","trackingNumber","shippingService","actions","purchase_units","amount","currency_code","custom_id","shipping","full_name","address_line_1","address_line_2","admin_area_2","admin_area_1","postal_code","country_code","application_context","locale","shipping_preference","onSuccess","paymentResult","payOrder","onError","err","AboutUsScreen","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ade8150.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_OTP_FAIL = 'USER_OTP_FAIL'\nexport const USER_OTP_REQUEST = 'USER_OTP_REQUEST'\nexport const USER_OTP_SUCCESS = 'USER_OTP_SUCCESS'\n\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'  \nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer'\nimport { \n    orderCreateReducer, \n    orderDetailsReducer, \n    orderPayReducer, \n    orderListyMyReducer, \n} from './reducers/orderReducers'\nimport { routeReducer } from './reducers/routeReducer'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productReviewCreate: productReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListyMyReducer,\n    keyword: routeReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\n\nconst initialState = {\n    cart: {cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: {userInfo: userInfoFromStorage}\n};\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\n\nexport default store","// Reducer is a function that takes in current state and an action - what we want to do with our current state, it will manipulate our state and then return a new state into the store\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = {products:[]}, action) => {\n    switch(action.type){ \n        case PRODUCT_LIST_REQUEST:\n            return {loading:true, products:[]}\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading:false, \n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                // variants: action.payload.variants\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return {loading:false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = {product: {reviews: [], variants: []}}, action) => {\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading:true, ...state}\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading:false, product: action.payload}\n\n        case PRODUCT_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch(action.type){\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading:true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading:false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading:false, error: action.payload}\n        \n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n","import { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS\n} from '../constants/cartConstants'\n\n\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.productId === item.productId && x.variantId === item.variantId)\n\n            if(existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.productId === existItem.productId && x.variantId === existItem.variantId ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            const pId = action.payload.productId\n            const vId = action.payload.variantId\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.productId !==pId || x.variantId !== vId)\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        \n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default: \n            return state\n    }\n\n\n}","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_OTP_FAIL,\n    USER_OTP_REQUEST,\n    USER_OTP_SUCCESS,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n\n } from '../constants/userConstants'\n\n export const userLoginReducer = (state = { }, action) => {\n    switch(action.type) { \n        case USER_LOGIN_REQUEST:\n            return {loading:true}\n\n        case USER_LOGIN_SUCCESS:\n            return {loading:false, userInfo: action.payload}\n\n        case USER_LOGIN_FAIL:\n            return {loading:false, error: action.payload}\n            \n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = { }, action) => {\n    switch(action.type){ \n        case USER_REGISTER_REQUEST:\n            return {loading:true}\n        case USER_OTP_REQUEST:\n            return {loading:true, OTPready: true}\n\n        case USER_REGISTER_SUCCESS:\n            return {loading:false, OTPready: true}\n\n        case USER_REGISTER_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_OTP_FAIL:\n            return {loading:false, error: action.payload, OTPready: true}\n        \n        case USER_OTP_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch(action.type){ \n        case USER_DETAILS_REQUEST:\n            return {...state, loading:true}\n\n        case USER_DETAILS_SUCCESS:\n            return {loading:false, user: action.payload}\n\n        case USER_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n        \n        case USER_DETAILS_RESET:\n            return { user: {}}\n    \n            \n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch(action.type){ \n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading:true}\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading:false, success: true, userInfo: action.payload}\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_RESET,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                success: true,\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n        \n        default: \n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_DETAILS_RESET:\n            return {\n                loading: false,\n                orderItems: [],\n                shippingAddress: {}\n            }\n\n        default: \n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_PAY_RESET:\n            return {}\n\n        default: \n            return state\n    }\n}\n\nexport const orderListyMyReducer = (state = {orders: []}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n        default: \n            return state\n    }\n}","export const routeReducer = (state = '', action) => {\n    switch(action.type){ \n        case 'UPDATE_KEYWORD':\n            return {keyword: action.payload}\n\n        default:\n            return state\n    }\n}\n","import jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\n\n\nconst baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:3000\"\n\n\n\nconst axiosInstance = axios.create({\n    baseURL,\n    headers: {\n        'Content-type': 'application/json',\n     }\n})\n\n\naxiosInstance.interceptors.request.use( async req => {\n\n    let userInfo = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n    req.headers['Authorization'] = `Bearer ${userInfo?.access}`\n    const token = jwt_decode(userInfo?.access)\n    const isExpired = dayjs.unix(token.exp).diff(dayjs()) < 1;\n    if(!isExpired) return req\n\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n            'Refresh-attempt': true\n        }\n    }\n     \n    const {data} = await axios.post(\n       '/api/users/login/refresh/',\n        {\n           'refresh': userInfo.refresh,\n        },\n        config\n       )\n\n    // data['username'] = userInfo.username\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n    req.headers.Authorization = `Bearer ${data.access}`\n\n    return req\n})\n\nexport default axiosInstance","import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_OTP_REQUEST,\n    USER_OTP_FAIL,\n    USER_OTP_SUCCESS,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n } from '../constants/userConstants'\n import { ORDER_LIST_MY_RESET, ORDER_DETAILS_RESET, ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n import {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n\n import axiosInstance from '../axiosInstance'\n\n\n\n\n export const login = (username, password) => async (dispatch) => {\n     try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        }\n        )\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {\n                'username': username,\n                'password': password\n            },\n            config\n            )\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n     } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n     };\n }\n\n export const logout = () => async (dispatch) => {\n     localStorage.removeItem('userInfo')\n     dispatch({type: USER_LOGOUT})\n     dispatch({type: USER_DETAILS_RESET})\n     dispatch({type: ORDER_LIST_MY_RESET})\n     dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n     dispatch({type: ORDER_DETAILS_RESET})\n     dispatch({type: ORDER_CREATE_RESET })\n\n }\n\n export const register = (userName, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n           type: USER_REGISTER_REQUEST\n        }\n        )\n        const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n        }\n  \n        const {data} = await axios.post(\n               '/api/users/register/',\n           {    'username': userName,\n                'email': email,\n                'password': password\n           },\n           config\n           )\n           dispatch({\n               type: USER_REGISTER_SUCCESS,\n               payload: data\n           })\n\n        //    dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data\n        //     })\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_REGISTER_FAIL,\n           payload: Object.values(error.response\n           ? error.response.data\n           : error.message)\n       })\n    };\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: USER_DETAILS_REQUEST\n        }\n        )\n\n        const {data} = await axiosInstance.get(`/api/users/${id}/`);\n\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n        \n\n    } catch (error) {\n       dispatch({\n           type: USER_DETAILS_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {data} = await axiosInstance.put(`/api/users/profile/update/`,\n            user,\n        );\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n\n        dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload: error.response && error.response.data \n        ? Object.values(error.response.data)\n        : error.message\n       })\n    };\n}\n\nexport const sendOTP = (OTP, username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_OTP_REQUEST\n         }\n         )\n  \n       const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n       }\n\n       const {data} = await axios.post(\n           '/api/users/login/OTP',\n           {   'OTP': OTP,\n               'username': username,\n               'password': password\n           },\n           config\n           )\n\n           dispatch({\n               type: USER_LOGIN_SUCCESS,\n               payload: data\n           })\n           dispatch({\n            type: USER_OTP_SUCCESS,\n            payload: data\n        })\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_OTP_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n\nexport const loginWithOTP = (OTP, username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n         }\n         )\n  \n       const config = {\n           headers: {\n               'Content-type': 'application/json'\n           }\n       }\n\n       const {data} = await axios.post(\n           '/api/users/login/OTP',\n           {   'OTP': OTP,\n               'username': username,\n               'password': password\n           },\n           config\n           )\n\n           dispatch({\n               type: USER_LOGIN_SUCCESS,\n               payload: data\n           })\n\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({\n           type: USER_LOGIN_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message,\n       })\n    };\n}\n","import React, {useState} from 'react'\nimport { Button, Form, Col } from 'react-bootstrap'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nfunction SearchBox() {\n\n    const [keyword, setKeyword] = useState('')\n\n    let navigate = useNavigate();\n    let location = useLocation();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if(keyword) {\n            navigate(`/?keyword=${keyword}&page=1`)\n        } else {\n            navigate(location.pathname)\n        }\n    }\n    return (\n\n    <Col md={6}>\n        <Form onSubmit={submitHandler} className='flex mt-2' >\n            <Form.Control\n                size=\"sm\"\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            >\n            </Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2 inline'\n            >\n                Submit\n            </Button>\n        </Form>\n        </Col>\n\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\nimport { useNavigate } from 'react-router-dom'\n\n\nfunction Header() {\n    let navigate = useNavigate()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const dispatch = useDispatch() \n\n    const logoutHandler = () => {\n        dispatch(logout())\n        navigate('/')\n    }\n\n    return (\n        <header>\n\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fish N Stik</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox  />\n                        <Nav className=\"mr-auto\">\n\n                            <Container className='flex width wrap'>\n                            <NavDropdown title='Our products'>\n                                <LinkContainer to='/?keyword=hooks'>\n                                    <NavDropdown.Item>\n                                        Hooks\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=snaps'>\n                                    <NavDropdown.Item>\n                                        Snaps\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=swivels'>\n                                    <NavDropdown.Item>\n                                        Swivels\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <LinkContainer to='/?keyword=fishingline'>\n                                    <NavDropdown.Item>\n                                        Fishing Line\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n\n                        {userInfo ? (\n                            <NavDropdown title='Welcome!' id='username'>\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>\n                                        Profile\n                                    </NavDropdown.Item>\n                                </LinkContainer>\n\n                                <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                </NavDropdown.Item>\n                                \n                            </NavDropdown>\n                        ): (\n                            <LinkContainer to='/login'>\n                                <Nav.Link><i className=\"fas fa-userf\"></i>Login</Nav.Link>\n                            </LinkContainer>\n                        )\n                    }   \n\n\n\n                            <LinkContainer to='/cart' className='left'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            </Container>\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'      \n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row className='flex align light'>\n                    <Col className=\"text-center py-3\">Copyright &copy; Fish N Stik</Col>\n                    <Col>\n                        <a href='/aboutus'>About us</a>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating( {value, text, color} ) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{color}} className={\n                    value >= 1\n                    ? 'fa fa-star'\n                    : value >= 0.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 2\n                    ? 'fa fa-star'\n                    : value >= 1.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 3\n                    ? 'fa fa-star'\n                    : value >= 2.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 4\n                    ? 'fa fa-star'\n                    : value >= 3.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 5\n                    ? 'fa fa-star'\n                    : value >= 4.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            \n            <p className='light'> {text && text}</p>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\n\nfunction Product({ product }) { \n    return (\n        <Card className=\"my-1 p-1 rounded max-content\">\n            <Link to={`/product/${product._id}`}>\n                <div className='objectfit'>\n                    <Card.Img className='fullsize' src={product.image}></Card.Img>\n                </div>\n            </Link>\n            <Card.Body>\n                <Link className=\"product-links\" to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                {product.catchPhrase ? <span>{product.catchPhrase}</span> : ''}\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\n                    </div>\n                </Card.Text>\n\n                <Card.Text className='light border-top' >\n                   {product.numVariants} types \n                </Card.Text>\n                <Card.Text className='light'>\n                   From ${Math.min(...product.variants.map(el=>el.price))} each\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\n    \n    if(keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return ( pages>1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x)=> (\n                    <LinkContainer \n                        key={x+1}\n                        to={`/?keyword=${keyword}&page=${x+1}`}\n                    >   \n                        <Pagination.Item\n                            active={x+1 === page}\n                        >\n                            {x+1}\n                        </Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { useLocation } from 'react-router-dom'\nimport { updateKeyword } from '../actions/routeAction'\n\n\n\nfunction HomeScreen() {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products, page, pages} = productList\n\n    // const [searchParams, setSearchParams] = useSearchParams();\n    // const keyword = searchParams.get('keyword')\n\n    let location = useLocation();\n    let keyword = location.search\n\n\n    // const [prevKeyword, setPrevKeyword] = useState(keyword)\n\n    useEffect(() => {\n        dispatch(updateKeyword(keyword))\n        dispatch(listProducts(keyword))\n       \n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                :     \n                <div>     \n                    <Row className='flex'>\n                        {products.map(product => (\n                            <Col key={product._id} className='gap2' >\n                                <Product product={product} keyword={keyword} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\n                </div>\n            }\n  \n        </div>\n    )\n}\n\nexport default HomeScreen\n","export const updateKeyword = (keyword) => async (dispatch) => {\n    \n    dispatch({\n        type: 'UPDATE_KEYWORD',\n        payload: keyword\n    })\n\n}","import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL, \n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET\n} from '../constants/productConstants'\n\nimport axiosInstance from '../axiosInstance'\n\n\nexport const listProducts = (keyword='') => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST})\n        \n        const {data} = await axios.get(`/api/products/${keyword}`);\n \n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    } \n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\n\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\n\n\n        const {data} = await axiosInstance.post(`/api/products/${productId}/reviews/`,\n            review\n        );\n\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n         \n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message,\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Table, Modal} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport { logout } from '../actions/userActions'\n\n\nfunction ProductScreen() {\n\n    // Main picture modal\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n\n    // Variant picture modals\n    const [showModalVariants, setShowModalVariants] = useState(\n        new Array(15).fill(false)\n    )\n    const handleShowVariants = (position) => {\n        const updatedArray = showModalVariants.map((el, index) => index === position ? true : false)\n        setShowModalVariants(updatedArray)\n    }\n    const  handleCloseVariants = () => setShowModalVariants(new Array(15).fill(false))\n \n\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n    const [checkedState, setCheckedState] = useState(\n        new Array(15).fill(false)\n    );\n\n    \n    const [checkedBoxIndex, setCheckedBoxIndex] = useState(null)\n    \n\n    const handleOnChange = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) => index === position ? true : false);\n        setCheckedState(updatedCheckedState);\n        setCheckedBoxIndex(position)\n    }\n\n\n    const dispatch = useDispatch();\n    \n    const keyword = useSelector(state=>state.keyword)\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    let { loading:loadingProductReview, error:errorProductReview, success:successProductReview } = productReviewCreate\n\n    const productId = useParams();\n    let navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (errorProductReview?.includes('token not valid')) {\n            dispatch(logout())\n        } \n        if(successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n        }\n\n        dispatch(listProductDetails(productId.id))\n    }, [dispatch, successProductReview, errorProductReview, productId.id])\n\n    const addToCartHandler = (variantId) => {\n   \n        navigate(`/cart/${productId.id}?qty=${qty}&variant=${variantId}`)\n    }\n    \n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(productId.id, {rating, comment}))\n\n    }\n\n\n\n    return (\n        <div className='hidden'>\n            \n            <Link to={keyword ? `/${keyword.keyword}` : '/'} className='btn btn-light my-3'>Go back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                    <div>\n           \n                        <Row>\n                            <Col md={4}>\n                                <Image onClick={handleShow} src={product.image} alt={product.name} fluid className='productImage'></Image>\n                            </Col>\n\n                            <Modal show={showModal} onHide={handleClose}>\n                                <Modal.Body>\n                                    <Image src={product.image} alt={product.name} fluid className='modalImage fullsize'>\n                                    </Image>                                \n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n        \n                            <Col md={6}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h3>{product.name}</h3>\n                                    </ListGroup.Item>\n            \n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Description: {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n            {product.numVariants === 1 && (           \n                            <Col md={5}>\n                                <Card md={5} className='my-5'>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>\n                                                        Price:\n                                                    </Col>\n                                                    <Col>\n                                                        <strong>${product.variants[0].price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n            \n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>\n                                                        Status:\n                                                    </Col>\n                                                    <Col>\n                                                        { product.variants[0].countInStock > 0 ? 'In Stock' : 'Out of Stock' }\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.variants[0].countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Select value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                                {                           \n                                                                    [...Array(product.variants[0].countInStock).keys()].map((x) => (\n                                                                        <option key={x+1} value={x+1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Select>\n                                                        \n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n            \n                                            <ListGroup.Item>\n                                                <Button \n                                                    onClick={\n                                                        ()=> (\n                                                        addToCartHandler(product.variants[0]._id))\n                                                    }\n                                                    className='btn-block' \n                                                    disabled={product.variants[0].countInStock === 0} \n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n            \n                                        </ListGroup>\n                                    </Card>\n                                </Card>\n                            </Col>\n            )} \n\n            {product.numVariants > 1 && (   \n                <div> \n                                    <Table size='sm' hover className='my-5 margin'>\n                                        <thead>\n                                            <tr className='bold light'>\n                                                <th>Image</th>\n                                                <th>Description</th>\n                                                <th>Price / each</th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody>\n                                            {product.variants.map((variant, index) => (\n                                            <tr \n                                            onClick={()=> handleOnChange(index)} \n                                            className={checkedState[index] ? 'marked' : ''} \n                                            key={variant._id}\n                                            >\n                                                <td>\n                                                    <Image onClick={()=> handleShowVariants(index)} className='thumbsize zindex' src={variant.image} alt={variant.name} thumbnail></Image>\n                                                    <Modal show={showModalVariants[index]} onHide={handleCloseVariants}>\n                                                        <Modal.Body>\n                                                            <Image src={variant.image} alt={variant.description} fluid className='modalImage fullsize'>\n                                                            </Image>                                \n                                                        </Modal.Body>\n                                                        <Modal.Footer>\n                                                            <Button variant=\"secondary\" onClick={handleCloseVariants}>\n                                                                Close\n                                                            </Button>\n                                                        </Modal.Footer>\n                                                    </Modal>\n\n                                                </td>\n                                                <td>\n                                                    {variant.description}\n                                                    <br />\n                                                    {variant.relatedProductLink && (\n                                                         <Link to={`/product/${product._id}`} className='btn-sm small green'>Related product link</Link>\n                                                    )}\n                                                </td>\n                                                <td className='smallscreenRow'>\n                                                        {variant.price}\n                                                </td>\n                                             </tr>\n            \n                                           \n                                            ))}\n                                        </tbody>\n                                    </Table>\n{product.variants[checkedBoxIndex] && ( \n                                        <Card md={5} className='my-5 justify-content-center'>\n                                            <Card>\n                                                <ListGroup variant='flush'>\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Price / total:\n                                                            </Col>\n                                                            <Col>\n                                                            {product.variants[checkedBoxIndex].price} x {qty} = ${product.variants[checkedBoxIndex].price* qty }\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Status:\n                                                            </Col>\n                                                            <Col>\n                                                                { product.variants[checkedBoxIndex].countInStock > 0 ? 'In Stock' : 'Out of Stock' }\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                    { product.variants[checkedBoxIndex].countInStock > 0 && (\n                                                    <ListGroup.Item>\n                                                        <Row>\n                                                            <Col>\n                                                                Amount ready to ship:\n                                                            </Col>\n                                                            <Col>\n                                                                {product.variants[checkedBoxIndex].countInStock}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                    )}\n                                                    {product.variants[checkedBoxIndex].countInStock > 0 && (\n                                                        <ListGroup.Item>\n                                                            <Row>\n                                                                <Col>Qty</Col>\n                                                                <Col>\n                                                                    <Form.Select value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                                        {                           \n                                                                            [...Array(product.variants[checkedBoxIndex].countInStock).keys()].map((x) => (\n                                                                                <option key={x+1} value={x+1}>\n                                                                                    {x + 1}\n                                                                                </option>\n                                                                            ))\n                                                                        }\n\n                                                                    </Form.Select>\n                                                                \n                                                                </Col>\n                                                            </Row>\n                                                            <Row className='center italic'>\n                                         \n                                                            </Row>\n                                                        </ListGroup.Item>\n                 \n                                                \n                                                    )}\n\n                                                    <ListGroup.Item>\n                                                        <Button \n                                                            onClick={()=>(addToCartHandler(product.variants[checkedBoxIndex]._id))}\n                                                            className='btn-block' \n                                                            disabled={product.variants[checkedBoxIndex].countInStock <= 0 } \n                                                            type='button'>\n                                                            Add to Cart\n                                                        </Button>\n                                                    </ListGroup.Item>\n\n                                                </ListGroup>\n                                            </Card>\n                                        </Card>\n                                        )}\n                </div>         \n            )} \n\n                        </Row>\n                        <Row>\n                            <Col md={6}>\n                                <h4>Recent reviews</h4>\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n                                <ListGroup variant='flush'>\n                                    {product.reviews.map((review) => (\n                                        <ListGroup.Item key={review._id}>\n                                            <strong>{review.name}</strong>\n                                            <Rating value={review.rating} color='#f8e825' />\n                                            <div className='light flex'>\n                                            <p style={{'marginRight': '1rem'}}>{review.createdAt.substring(0,10)}</p>\n                                            <p>{review.comment}</p>\n                                            </div>\n                                        </ListGroup.Item>\n                                    ))}\n                                    <ListGroup.Item>\n                                        <h4>Write a review</h4>\n                                        {loadingProductReview && <Loader />}\n\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\n\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                        \n\n                                        {userInfo ? (\n                                            <Form onSubmit={submitHandler}>\n                                                <Form.Group controlId='rating'>\n                                                    <Form.Label>Rating</Form.Label>\n                                                    <Form.Control \n                                                        as='select'\n                                                        value={rating}\n                                                        onChange={(e)=> setRating(e.target.value)}\n                                                    >\n                                                        <option value=''>Select...</option>\n                                                        <option value='1'>1 - Poor</option>\n                                                        <option value='2'>2 - Fair</option>\n                                                        <option value='3'>3 - Good</option>\n                                                        <option value='4'>4 - Very Good</option>\n                                                        <option value='5'>5 - Excellent</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                \n                                                <Form.Group controlId='comment'>\n                                                    <Form.Label>Review</Form.Label>\n                                                    <Form.Control\n                                                        as='textarea'\n                                                        rows='5'\n                                                        value={comment}\n                                                        onChange={(e)=> setComment(e.target.value)}\n                                                    ></Form.Control>\n                                                </Form.Group>\n\n                                                <Button\n                                                    disabled={loadingProductReview}\n                                                    type='submit'\n                                                    variant='primary'\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Form>\n                                        ) : (\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                        )}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                    </div>\n                    )\n\n\n\n\n            }\n        \n\n        </div>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants'\n\n\n\n\n\nexport const addToCart = (id, variantId, qty) => async (dispatch, getState) => {\n\n    const {data} = await axios.get(`/api/products/${id}`);\n    \n \n    // Find index of correct variant within product.variants list\n\n    let index = data.variants.findIndex( el => el['_id'] === variantId)\n    \n\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            productId: data._id,\n            variantId,\n            name: data.name,\n            variantDescription: data.variants[index].description,\n            image: data.variants[index].image,\n            price: data.variants[index].price,\n            countInStock: data.variants[index].countInStock,\n            qty\n        }            \n    }) \n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (productId, variantId) => async (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: {\n            productId,\n            variantId\n        } \n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data, \n    })\n\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data, \n    })\n\n}","import React, {useEffect} from 'react'\nimport { Link, useParams, useNavigate, useLocation, useSearchParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n\n//removed {location}\nfunction CartScreen() {\n    const productId = useParams().id\n    let navigate = useNavigate()\n    let qty = parseInt(useLocation().search.split('=')[1])\n    if(!qty) qty = 1\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const variantId = Number(searchParams.get('variant'))\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n    // console.log({cartItems}) \n\n    //useDispatch to dispatch action - only in event of productId\n    useEffect(() => { \n        if(productId) {\n            dispatch(addToCart(productId, variantId, qty))\n        }\n    }, [dispatch, productId, variantId, qty])\n\n    const removeFromCartHandler = (productId, variantId) => {\n        dispatch(removeFromCart(productId, variantId))\n    }\n\n    const checkoutHandler = () => {\n        navigate('/login?redirect=/shipping')\n    }\n\n    return (\n       <Row>\n           <Col md={12}>\n               <h1>Shopping Cart</h1>\n               {cartItems.length === 0 ? (\n                   <Message variant='info'>\n                       Your cart is empty <Link to='/'>Go Back</Link>\n                   </Message>\n               ) : (\n                   <ListGroup variant='flush'>\n                       {cartItems.map(item => (\n                           <ListGroup.Item key={`p${item.productId}v${item.variantId}`} className='border-top border-bottom' >\n                               <Row>\n                                   <Col>\n                                        <Image src={item.image} alt={item.name} fluid rounded className='thumbsize'></Image>\n                                   </Col>\n                                   <Col md={4}>\n                                       <Link \n                                            className=\"product-links\" \n                                            to={`/product/${item.productId}`}\n                                        >\n                                            <strong className='bold'>{item.name}</strong> <p className='light'>({item.variantDescription})</p>\n                                        </Link>\n                                       \n                                   </Col>\n                                   <Col md={1}>\n                                        ${item.price} <p className='light'>(each)</p>\n                                   </Col>\n                                   <div className='flex gap'>\n                                   <Col md={4}> \n                                        <Form.Select\n                                            value={item.qty} \n                                            onChange={(e) => dispatch(addToCart(item.productId, item.variantId, Number(e.target.value)))}>\n                                            \n                                            {                           \n                                                [...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x+1} value={x+1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))\n                                            }\n                                        </Form.Select>\n                                   </Col>\n                                   <Col md={1}>\n                                        <Button\n                                            type='button'\n                                            variant='light'\n                                            onClick={() => removeFromCartHandler(item.productId, item.variantId)}\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button> \n                                   </Col>\n                                   </div>\n                               </Row>\n                           </ListGroup.Item>\n                       ))}\n                   </ListGroup>\n               )}\n           </Col>\n           <Col md={6}>\n               <Card className='my-5'>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2>\n                               Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\n                            </h2>\n                           ${cartItems.reduce((acc,item) => acc + item.qty * item.price, 0).toFixed(2)}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button\n                                type='button'\n                                className='bnt-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                           >\n                               Proceed to Checkout\n                           </Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n           \n               </Card>\n           </Col>\n       </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({children}) {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login, loginWithOTP } from '../actions/userActions'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\n\nfunction LoginScreen() {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [needOTP, setNeedOTP] = useState(false)\n    const [OTP, setOTP] = useState('')\n\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate()\n\n    let redirect = useLocation().search.split('=')[1]\n    if(!redirect) redirect='/'\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const {error, loading, userInfo} = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            navigate(redirect)\n        }\n\n        if(error && error[0].includes('We were not able to verify your email')) {\n            setNeedOTP(true)\n        }\n\n    }, [navigate, userInfo, redirect, error]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    const submitOTP = (e) => {\n        e.preventDefault()\n        dispatch(loginWithOTP(OTP, username, password))\n    }\n\n    return (\n        \n        <div>\n{error && <Message variant='danger'>{error}</Message>}\n\n{loading && <Loader />}\n\n{!needOTP ? (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n\n   \n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='username'>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        required\n                        type='Username'\n                        placeholder='Your username'\n                        value={username}\n                        onChange={(e)=>setUsername(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New to our site? \n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n) :\n(\n        <FormContainer>\n            <h1>Validate Email</h1>\n            <br />\n            <h5>An OTP was sent to email associated with your account. Please enter it here to complete registration.</h5>\n            <br />\n    \n            <Form onSubmit={submitOTP}>\n\n                <Form.Group controlId='OTP'>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='OTP from your email'\n                        value={OTP}\n                        onChange={(e)=>setOTP(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Submit\n                </Button>\n            </Form>\n        </FormContainer>\n)}\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register, sendOTP } from '../actions/userActions'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nfunction RegisterScreen() {\n\n    const [userName, setUserName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [OTP, setOTP] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    let navigate = useNavigate()\n\n    let redirect = useLocation().search.split('=')[1]\n    if(!redirect) redirect='/'\n\n    const userRegister = useSelector(state => state.userRegister)\n\n    const {error, loading, OTPready, userInfo} = userRegister\n\n    // If user is already logged in, return user to previous page\n    useEffect(() => {\n        if (userInfo) {\n            navigate(redirect)\n        }\n    }, [navigate, userInfo, redirect]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(userName, email, password))\n            setMessage('')\n        }\n    }\n\n    const submitOTP = (e) => {\n        e.preventDefault()\n        dispatch(sendOTP(OTP, userName, password))\n    }\n    return (\n\n        <div>\n\n\n        {error && <Message variant='danger'>{error}</Message>}\n        {message && <Message variant='danger'>{message}</Message>}\n        {loading && <Loader />}\n\n {!OTPready ? (\n\n     <FormContainer>\n            <h1>Register</h1>\n\n \n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='username'>\n                    <Form.Label>User Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Please pick a username'\n                        value={userName}\n                        onChange={(e)=>setUserName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Your email address'\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Please confirm your password'\n                        value={confirmPassword}\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n\n\n            <Row className='py-3'>\n                <Col>\n                    Already have an Account?\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> Sign In</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n ) :\n(\n        <FormContainer>\n            <h1>Validate Email</h1>\n            <br />\n            <h5>An OTP was sent to your email ({email}) for validation. Please enter it here to complete registration.</h5>\n            <br />\n    \n            <Form onSubmit={submitOTP}>\n\n                <Form.Group controlId='OTP'>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='OTP from your email'\n                        value={OTP}\n                        onChange={(e)=>setOTP(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Submit\n                </Button>\n            </Form>\n\n        </FormContainer>\n)}\n        </div>\n\n       )\n}\n\nexport default RegisterScreen\n","import React, {useState, useEffect} from 'react'\nimport { Form, Button, Row, Col, Table, ListGroup} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { useNavigate } from 'react-router-dom'\nimport { USER_LOGOUT, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\n\nfunction ProfileScreen() {\n    const [showResetPassword, setShowResetPassword] = useState(false)\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n    const [password2, setPassword2] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success, error: errorUpdatePassword } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const {loading:loadingOrders, error: errorOrders, orders } = orderListMy\n    // If user is not already logged in, return user to previous page\n    useEffect(() => {\n        if (!userInfo) {\n            navigate('/login')\n        } \n        if (!user || !user.username || success ) {\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\n            dispatch(getUserDetails('profile'))\n            dispatch(listMyOrders())\n            setPassword('')\n            setPassword2('')\n            setOldPassword('')\n            setShowResetPassword(false)\n        }\n        if (error === 'Given token not valid for any token type' || errorUpdatePassword === 'Given token not valid for any token type' ) {\n            dispatch({type: USER_LOGOUT})\n        } \n   \n\n    }, [navigate, userInfo, dispatch, user, success, error, errorUpdatePassword]\n    )\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'old_password': oldPassword,\n                'password': password,\n                'password2': password2\n            }))\n            setMessage('')\n        }\n\n    }\n\n\n    return (\n        <Row>\n            <Col>\n                <h2>User Profile</h2>\n                {message && <Message variant='danger'>{message}</Message>}\n                {errorUpdatePassword && <Message variant='danger'>{errorUpdatePassword}</Message>}\n                {success && <Message variant='success'>Password updated</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item className='flex gap'>\n                            <span><strong>Username:</strong>{user && user.username}</span>\n                            <span className='left'><strong>Email:</strong>{user && user.email}</span>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button onClick={()=>setShowResetPassword(!showResetPassword)}>Reset Password</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant='flush'>\n\n     {showResetPassword &&            \n                    <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='oldpassword'>\n                                <Form.Label>Old Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Please enter your old password'\n                                    value={oldPassword}\n                                    onChange={(e) => setOldPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='password'>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Enter Password'\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='password2'>\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    required\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    value={password2}\n                                    onChange={(e) => setPassword2(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                                <Button type='submit' variant='primary'>\n                                Update\n                                </Button>\n                        </Form> \n}\n                        \n\n                    </ListGroup>\n\n\n\n\n\n\n\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0,10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn=sm'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n            \n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL, \n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET\n} from '../constants/orderConstants'\n\nimport axiosInstance from '../axiosInstance'\n\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_CREATE_REQUEST\n        })\n\n        const {data} = await axiosInstance.post(`/api/orders/add/`,\n            order\n        );\n\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems');\n        \n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n    };\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ \n           type: ORDER_DETAILS_REQUEST\n        })\n\n        const {data} = await axiosInstance.get(`/api/orders/${id}/`);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n        console.log(error.response)\n\n       dispatch({\n           type: ORDER_DETAILS_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_PAY_REQUEST\n        })\n\n\n        const {data} = await axiosInstance.put(`/api/orders/${id}/pay/`,\n            paymentResult\n        );\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n       dispatch({\n           type: ORDER_PAY_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n           type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {data} = await axiosInstance.get(`/api/orders/myorders/`);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n       dispatch({\n           type: ORDER_LIST_MY_FAIL,\n           payload: error.response && error.response.data.detail \n           ? error.response.data.detail\n           : error.message\n       })\n    };\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    return (\n        <Nav className='justify-content-center mb-1'>\n            <Nav.Item>\n                {step1 ? (\n                <LinkContainer to='/login'>\n                    <Nav.Link>Login</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                <LinkContainer to='/shipping'>\n                    <Nav.Link>Shipping</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                <LinkContainer to='/payment'>\n                    <Nav.Link>Options</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Options</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                <LinkContainer to='/placeorder'>\n                    <Nav.Link>Place Order</Nav.Link>\n                </LinkContainer>\n                ): (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n\n            </Nav.Item>\n\n\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useNavigate } from 'react-router-dom'\nimport { saveShippingAddress } from '../actions/cartActions'\n \nfunction ShippingScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n\n    const [name, setName] = useState(shippingAddress.name)\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [apartment, setApartment] = useState(shippingAddress.apartment)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [state, setState] = useState(shippingAddress.state)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [phone, setPhone] = useState(shippingAddress.phone)\n\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({name, address, apartment, city, state, postalCode, phone}))\n        navigate('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n           <Form onSubmit={submitHandler}>\n                \n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Recipient name or business'\n                        value={name ? name : ''}\n                        onChange={(e)=>setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter street address'\n                        value={address ? address : ''}\n                        onChange={(e)=>setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='apartment'>\n                    <Form.Label>Apartment</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='If applicable, enter apartment or suite'\n                        value={apartment ? apartment : ''}\n                        onChange={(e)=>setApartment(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value= {city ? city : ''}\n                        onChange={(e)=>setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='state'>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter state'\n                        value={state ? state : ''}\n                        onChange={(e)=>setState(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>PostalCode</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postalCode'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e)=>setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='phone'>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Not required but helpful for sharing any information related to your order'\n                        value={phone ? phone : ''}\n                        onChange={(e)=>setPhone(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className='my-3'>\n                    Continue \n                </Button>\n           </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, {useState} from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useNavigate } from 'react-router-dom'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n    let navigate = useNavigate()\n\n    const [paymentMethod, setPaymentMethod ] = useState('PayPal or Credit Card')\n    if(!shippingAddress.name) {\n        navigate('/shipping/')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(!shippingAddress.name) {\n            navigate('/shipping')\n            return\n\n        }\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>\n                        Select Method\n                    </Form.Label>\n                    <Col>\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='paypal' name='paymentMethod' checked onChange={(e) => setPaymentMethod(e.target.value)}>\n                        \n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, {useState, useEffect} from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Form } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { logout } from '../actions/userActions'\nimport { useNavigate } from 'react-router-dom'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n\n\nfunction PlaceOrderScreen() {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    let {order, error, success} = orderCreate\n    const [instructions, setInstructions] = useState('')\n    const dispatch = useDispatch();\n    let navigate = useNavigate()\n\n    const cart = useSelector(state => state.cart)\n\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + (item.price * item.qty), 0).toFixed(2);\n\n    cart.shippingPrice = (cart.itemsPrice > 100 ?  0 : 10).toFixed(2);\n\n    cart.taxPrice = ((0.082) * cart.itemsPrice).toFixed(2);\n\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.taxPrice) +\n        Number(cart.shippingPrice)\n    ).toFixed(2);\n    \n    useEffect(() => { \n\n        if(cart.cartItems.length === 0) {\n            navigate('/')\n        }\n        if(!cart.shippingAddress.name) {\n            navigate('/shipping/')\n        }\n        if(!cart.paymentMethod) {\n            navigate('/payment');\n        }\n        if(success) {\n            navigate(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n        if (error?.includes('token not valid')) {\n            \n            dispatch(logout())\n            navigate('/login/')\n        } \n\n    }, [error, success, dispatch, navigate, cart])\n\n\n    const placeOrder = () => {\n        \n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            instructions: instructions\n        }))\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n\n         \n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <ul className='list'>\n                                <li className='light my-2'>Shipping Address:</li>\n                                <li>{cart.shippingAddress.name}</li>  \n                                <li>{cart.shippingAddress.address}</li>\n                                {cart.shippingAddress.apartment ? <li>Apt/Ste: {cart.shippingAddress.apartment}</li> : ''} \n                                <li>{cart.shippingAddress.city}, {cart.shippingAddress.state} {cart.shippingAddress.postalCode}</li>\n                                <li>{cart.shippingAddress.phone}</li>\n                            </ul>\n                        </ListGroup.Item>\n    \n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method:</strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4 className='green'>Instructions</h4>\n                            <Form.Control\n                                type='text'\n                                placeholder='Any special instructions for this order?'\n                                value={instructions ? instructions : ''}\n                                onChange={(e)=>setInstructions(e.target.value)}\n                            >\n                            </Form.Control>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? \n                            <Message variant='info'>Your cart is empty</Message> :\n                            (   \n                                <ListGroup variant='flush'>\n\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image className='thumbsize'src={item.image} alt={item.name} fluid rounded></Image>\n                                                </Col>\n\n                                                <Col >\n                                                <Link \n                                                className=\"product-links\" \n                                                to={`/product/${item.productId}`}\n                                                >\n                                                    <strong className='bold'>{item.name}</strong> <p className='light'>({item.variantDescription})</p>\n                                                </Link>\n\n\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    )) \n                                    }\n\n                                </ListGroup>\n\n                            )\n                            }\n                        </ListGroup.Item>\n                        \n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n \n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button \n                                    type='button'\n                                    className='btn-block'\n                                    disable={cart.cartItems.length === 0 ? true : undefined}\n                                    onClick={placeOrder}\n                                >\n                                    Place order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, {useState, useEffect} from 'react'\nimport { Row, Col, ListGroup, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { getOrderDetails, payOrder} from '../actions/orderActions'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\n\n\nfunction OrderScreen() {\n\n    const orderId = useParams().id;\n    let navigate = useNavigate()\n    \n    const dispatch = useDispatch();\n    const [errorPayPal, setErrorPayPal] = useState('')\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    let { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay, error: errorPay } = orderPay\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.REACT_APP_PAYPAL_CLIENT_ID}`\n        script.async = true\n        script.onload = () => { \n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n    \n    useEffect(() => { \n        if(!order || successPay || order._id !== Number(orderId)) {\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n        \n        if(error?.includes('token')) {\n            navigate(`/login?redirect=/order/${orderId}`)\n        }\n\n    \n    }, [dispatch, order, orderId, error, successPay, navigate])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    return loading ?  <Loader /> : \n    error ? <Message variant='danger'>{error}</Message> :\n    (\n        <div>\n            <h1>Order: </h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Contact info</h2>\n                            <span><strong>Email:</strong><a>{order.user.email}</a></span>\n                            <br/>\n                            <span><strong>Phone</strong> { order.shippingAddress.phone}</span>\n                            <br/>\n                            <br/>\n                            <p><strong>Shipping address for this order:</strong></p>\n                            <ul className='list'>\n                                <li>{ order.shippingAddress.name}</li>\n                                <li>{order.shippingAddress.address}</li>\n                                {order.shippingAddress.apartment ? <li>{order.shippingAddress.apartment}</li> : ''} \n                                <li>{order.shippingAddress.city}, {order.shippingAddress.state} {order.shippingAddress.postalCode}</li>\n                            </ul>\n\n                            {order.isDelivered ? (\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                            ) : order.trackingNumber ? (\n                                <Message variant='info'>{order.shippingService} {order.trackingNumber}</Message>\n                            ) :\n                            <Message variant='warning'>Not shipped</Message> \n                            }\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment</h2>\n                            <p>\n                                <strong> Payment method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            <p>\n                                <strong> Instructions: </strong>\n                                {order.instructions ? order.instructions : 'None given'}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Not paid{order.paidAt}</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order?.orderItems.length === 0 ? \n                            <Message variant='info'>Order is empty</Message> :\n                            (   \n                                <ListGroup variant='flush'>\n\n                                    {order?.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                           \n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}>{item.name} ({item.variantDescription})</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                    ))\n                                    }\n\n                                </ListGroup>\n\n                            )\n                            }\n                        </ListGroup.Item>\n                        \n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {errorPay && <Message variant='danger'>{errorPay}</Message>}\n                                    {errorPayPal && <Message variant='danger'>{errorPayPal}</Message>}\n\n\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton \n                                            createOrder={(data, actions) => {\n                                                return actions.order.create({\n                                                purchase_units: [{\n                                                    amount: {\n                                                    currency_code: \"USD\",\n                                                    value: order.totalPrice\n                                                    },\n                                                    custom_id: orderId,\n                                                    shipping: {\n                                                        name: {\n                                                          full_name: order.shippingAddress.name\n                                                        },\n                                                        address: {\n                                                          address_line_1: order.shippingAddress.address,\n                                                          address_line_2: order.shippingAddress.apartment,\n                                                          admin_area_2: order.shippingAddress.city,\n                                                          admin_area_1: order.shippingAddress.state,\n                                                          postal_code: order.shippingAddress.postalCode,\n                                                          country_code: 'US',\n                                                        }\n                                                      }\n                                                   \n                                                }],\n                                                application_context: {\n                                                    locale: 'us-US',\n                                                    shipping_preference: 'SET_PROVIDED_ADDRESS',\n                                                  }\n                                            \n                                                });\n                                            }}\n                                            onSuccess={successPaymentHandler}\n                                            onError={(err)=>setErrorPayPal(err)}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderScreen\n","import React from 'react'\n\nfunction AboutUsScreen() {\n    return (\n        <div>\n            <h4>\"Your number 1 source for wholesale fishing equipment and terminal tackle\"</h4>\n            <p><strong>Located in: </strong>OFFICIAL The Ballpark of the Palm Beaches</p>\n            <p><strong>Address: </strong>5407 Haverhill Rd UNIT 339, West Palm Beach, FL 33407</p>\n            <p><strong>Hours: </strong>8:00am to 4:00pm weekdays</p>\n            <p><strong>Phone: </strong>(561) 686-7845</p>\n        </div>\n    )\n}\n\nexport default AboutUsScreen\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route, Routes} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport AboutUsScreen from './screens/AboutUsScreen'\n\n\n\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-1 width\">\n        <Container>\n          <Routes>\n            <Route path='/' element={<HomeScreen />} />\n            <Route path='/aboutus' element={<AboutUsScreen />} />\n            <Route path='/login' element={<LoginScreen />} />\n            <Route path='/register' element={<RegisterScreen />} />\n            <Route path='/profile' element={<ProfileScreen />} />\n            <Route path='/shipping' element={<ShippingScreen />} />\n            <Route path='/payment' element={<PaymentScreen />} />\n            <Route path='/placeorder' element={<PlaceOrderScreen />} />\n            <Route path='/order/:id' element={<OrderScreen />} />\n            <Route path='/product/:id' element={<ProductScreen />} />\n            <Route path='/cart/:id' element={<CartScreen />} />\n            <Route path='/cart/' element={<CartScreen />} />\n\n\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}